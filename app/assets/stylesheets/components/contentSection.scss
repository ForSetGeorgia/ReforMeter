.contentSection {
  background-color: white;
  box-sizing: border-box;
  border-bottom: 3px solid $color-grey-background;
  margin-bottom: 20px;
}

  .contentSection-header {
    box-sizing: border-box;
    margin: 0;
    padding: 22px $padding-main-content;
    display: flex;
    flex-direction: column;

    @media (min-width: $widthHeaderControlsBecomeHorizontal) {
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
    }
  }

    .contentSection-header-title {
    }

    .contentSection-header-controls {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      margin-top: 20px;

      @media (min-width: $widthHeaderControlsBecomeHorizontal) {
        margin-left: 15px;
        align-items: flex-end;
        text-align: right;
        margin-top: 0;
      }
    }

  .contentSection-header.mod-no-padding {
    padding: 0;
  }

  .contentSection-header.mod-news {
    padding-top: 15px;
    padding-bottom: 5px;
  }

  .contentSection-body {
    border-top: 3px solid $color-grey-background;
    padding: 0 $padding-main-content;
    color: $color-grey-text;
  }

  .contentSection-body.mod-no-top-border {
    border-top: none;
  }

  .contentSection-body.mod-no-padding {
    padding: 0;
  }

  .contentSection-body.mod-vertical-padding {
    padding-top: 15px;
    padding-bottom: 15px;
  }

  .contentSection-body.mod-flex-column {
    display: flex;
    flex-direction: column;
  }

  .contentSection-body.mod-fill-vertical-space {
    height: 100%;

    // Safari behaves differently in this case from Chrome and Firefox.
    // If height: 100%; is applied, it calculates the height to be 0px.
    // We want to keep height: 100% on all non-Safari browsers,
    // so this is a workaround for Safari.
    // Note: If you're reading this when CSS Grid has come around to all
    // browsers, then just replace this hack with the Grid :)
    &.safari-only {
      height: initial;
    }
  }

.contentSection.mod-overlap-top-image {
  @media (min-width: $width-content-overlap-top-image) {
    margin-top: -1 * $height-content-heading;
  }

  .contentSection-header {
    @media (min-width: $width-content-overlap-top-image) {
      min-height: $height-content-heading;
    }
  }
}

.contentSection.mod-flex-column {
  display: flex;
  flex-direction: column;
}
